Sure, Vishnu! Here's a simple Java solution for the palindrome checker problem:

```java
import java.util.Scanner;

public class PalindromeChecker {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a string to check if it's a palindrome: ");
        String input = scanner.nextLine();

        if (isPalindrome(input)) {
            System.out.println(input + " is a Palindrome");
        } else {
            System.out.println(input + " is not a Palindrome");
        }
    }

    private static boolean isPalindrome(String str) {
        str = str.replaceAll("[\\W]", "").toLowerCase(); // Remove non-word characters and convert to lower case
        int left = 0, right = str.length() - 1;

        while (left < right) {
            if (str.charAt(left) != str.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
}
```

In this code, the `isPalindrome` method first sanitizes the input string by removing all non-word characters and converting it to lowercase. Then, it uses two pointers (left and right) to compare characters from both ends, moving towards the center. If any pair of characters doesn't match, it returns `false`. If all pairs match, it returns `true`, indicating the string is a palindrome.